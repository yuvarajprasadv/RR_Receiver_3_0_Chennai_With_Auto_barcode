main(arguments);function main(argv){    app.userInteractionLevel = UserInteractionLevel.DONTDISPLAYALERTS;    sourceDoc = app.activeDocument; 	// 	SaveDocAsPDF(sourceDoc, argv[0]); // 	ExportDocumentAsJPEG(sourceDoc, argv[0]);// 	ExportDocumentAsJPEG(sourceDoc, argv[3]);// 	ExportDocumentAsPSD(sourceDoc, argv[3]);// 	ExportDocumentAsPNG24(sourceDoc, argv[3]);// 	SaveSourceDoc(sourceDoc, argv[1]); 	ExportDocumentAsJPEG(sourceDoc, argv[0]); 	ExportDocumentAsJPEG(sourceDoc, argv[3]); 	ExportDocumentAsPSD(sourceDoc, argv[3]); 	ExportDocumentAsPNG24(sourceDoc, argv[3]); 	SaveDocAsPDF(sourceDoc, argv[0]); 	SaveSourceDoc(sourceDoc, argv[1]);    return SaveNormalizedPDF(sourceDoc, argv[0] + "_Normalised", argv[2]);	}function SaveNormalizedPDF(sourceDoc, pdfTargetPath, illustratorVersion){	try	{		var externalSearchFolder = ExternalObject.searchFolder;		var eskoPluginFolderPath = "/Applications/Adobe Illustrator "+ illustratorVersion +"/Plug-ins.localized/Esko/Data Exchange/PDF Export;" + externalSearchFolder;		        ExternalObject.searchFolders=eskoPluginFolderPath;        var dw;        if(illustratorVersion == "CS6")        		dw = new ExternalObject("lib:PDFExport_MAI16r.aip");        	else if(illustratorVersion == "CC")        		dw = new ExternalObject("lib:PDFExport_MAI17r.aip");        	else if(illustratorVersion == "CC 2014")        		dw = new ExternalObject("lib:PDFExport_MAI18r.aip");        	else if(illustratorVersion == "CC 2015")        		dw = new ExternalObject("lib:PDFExport_MAI20r.aip");        else if(illustratorVersion == "CC 2015.3")        		dw = new ExternalObject("lib:PDFExport_MAI20r.aip");        	else if(illustratorVersion == "CC 2017")        		dw = new ExternalObject("lib:PDFExport_MAI21r.aip");        	else if(illustratorVersion == "CC 2018")        		dw = new ExternalObject("lib:PDFExport_MAI22r.aip");        else if(illustratorVersion == "CC 2019")        		dw = new ExternalObject("lib:PDFExport_MAI23r.aip");        	        var scripter = new NormalizedPDFExport();        scripter.embedImages  = false;            scripter.addPreview   = false;        scripter.copyImages   = false;        scripter.copyImagesNotOnServers = false;        scripter.fitMediaBoxToArtwork   = false;        scripter.expandPatterns         = false;        scripter.contourizeBitmaps      = false;        scripter.outlineText            = false;        //scripter.exportHiddenObjects  = false;        // Obsolete        scripter.includeHiddenObjectsAndLayers = true; // Replace exportHiddenObjects        scripter.includeNotes           = true;        scripter.blendResolution        = 600;         scripter.borderMode             = 3; // kBordersModeArtworkBoundingBox = 1,                                             //kBordersModeCurrentArtboard = 2,                                             //kBordersModeTrimBox = 3        var pdfFilePathToSave= pdfTargetPath + ".pdf";        scripter.outputPath = pdfFilePathToSave;        scripter.exportPDF();                    var ErrorCode      = scripter.errorCode;        var ErrorMessage   = scripter.errorMessage;        var AllMessages    = scripter.formatedExportMessage;	//	$.writeln("\n\n ERRCODE:  " + ErrorCode + "\n\n ERRMESSAGE:  " + ErrorMessage + "\n\nALLMESSAGE:   " +  AllMessages );                if(ErrorCode > 0)            return "Pdf Export failed: " + ErrorMessage;        else        		return "null";                }       catch (e)       {       	return "plugin " + e.description;       }       }function SaveSourceDoc(docSource, docTargetPath){     if ( app.documents.length > 0 )     {                var docFileName = new File ( docTargetPath );        var saveOpts = new IllustratorSaveOptions();    		saveOpts.embedLinkedFiles = false;    		saveOpts.fontSubsetThreshold = 0.0;   	 	saveOpts.pdfCompatible = true;        docSource.saveAs(docFileName, saveOpts);    }}function SaveDocAsPDF (sourceDoc, pdfTargetPath){    if ( app.documents.length > 0 )     {        var pdfFileName = new File ( pdfTargetPath );        savePdfOpts = new PDFSaveOptions();        savePdfOpts.optimization = true;        savePdfOpts.preserveEditablility = false;        savePdfOpts.compatibility = PDFCompatibility.ACROBAT5;        sourceDoc.saveAs( pdfFileName, savePdfOpts );    }}function ExportDocumentAsJPEG(docSource, docTargetPath){	if(app.documents.length > 0)	{		var docFileSpec = new File ( docTargetPath );		var exportOptions = new ExportOptionsJPEG();		var type = ExportType.JPEG;		exportOptions.antiAliasing = false;		exportOptions.qualitysetting = 75;		exportOptions.optimization = true;		exportOptions.artBoardClipping = false;		docSource.exportFile(docFileSpec, type, exportOptions);			}}function ExportDocumentAsPSD(docSource, docTargetPath){	if(app.documents.length > 0)	{		var docFileSpec = new File ( docTargetPath );		var exportOptions = new ExportOptionsPhotoshop();		var type = ExportType.PHOTOSHOP;		exportOptions.resolution = 300;		docSource.exportFile(docFileSpec, type, exportOptions);			}}function ExportDocumentAsPNG24(docSource, docTargetPath){	if(app.documents.length > 0)	{		var docFileSpec = new File ( docTargetPath );		var exportOptions = new ExportOptionsPNG24();		var type = ExportType.PNG24;		exportOptions.transparency = false;		exportOptions.saveAsHTML = true;		docSource.exportFile(docFileSpec, type, exportOptions);			}}