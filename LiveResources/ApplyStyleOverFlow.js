var order = "1-3-2-4";var eachOrder = order.split("-");var counter = 0;var doc = app.activeDocument;main(arguments);function getVisible(txObj){    var result=0;    for (var i=0;i<txObj.lines.length;i++)    {        result += txObj.lines[i].characters.length;    }    return result;} function getChars(txObj){    var result=0;      //  $.writeln(txObj.paragraphs.length);    txObj.selected = true;    for (var i=0;i<txObj.paragraphs.length;i++)    {        try        {            result += txObj.paragraphs[i].characters.length;        }        catch(err)        {     //       $.writeln(err.message);            $.sleep (10000);         }    }    return result;} function scalingWidth(txObj, wscl, orderSeq){    for (var i=0;i<txObj.paragraphs.length;i++)    {     //   txObj.paragraphs[i].scaling = wscl;     //txObj.textRange.characterAttributes.size -= 0.5;         switch (orderSeq)         {              case "1":              {	              //$.writeln(txObj.paragraphs[i].characterAttributes.tracking );	              txObj.paragraphs[i].characterAttributes.tracking -= 1;	              redraw();              }              case "4":              {                    txObj.paragraphs[i].characterAttributes.size -= 0.5;                    redraw();              }              case "2":              {               //   $.writeln(txObj.paragraphs[i].characterAttributes.tracking );	              txObj.paragraphs[i].characterAttributes.horizontalScale -= 12.0;	              // txObj.paragraphs[i].desiredWordSpacing = 0.5;	              redraw();              }              case "3":              {                    txObj.paragraphs[i].characterAttributes.leading  -= 0.5;                    redraw();              }               }    }}  function getCharacters(eachTextFrame, eachOrder){    var ordSeq = 0;    slct =eachTextFrame;        visibleChar =getVisible(slct);    cntsLength = getChars(slct);    var vscale = 1.0;    stepNum = 0.02;     while (cntsLength != visibleChar) {     //   $.writeln("order " + ordSeq);        if (ordSeq == 4)        {            ordSeq = 0;        }        scalingWidth(slct, [vscale, 1], eachOrder[ordSeq++]);                visibleChar =getVisible(slct);        vscale = vscale-stepNum;        } }function ApplyStyleInOrder(eachOrder){    for (var eachTxt=0; eachTxt < doc.textFrames.length; eachTxt++)    {    	eachTextFrame = app.activeDocument.textFrames[eachTxt];	    if (eachTextFrame.kind == TextType.AREATEXT)	    {            eachTextFrame.selected = true;	        getCharacters(eachTextFrame, eachOrder);	    }    eachTextFrame.selected = false;    } }function main(argv){ApplyStyleInOrder(eachOrder);}